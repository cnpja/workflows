name: Node.js Cloud Run Deploy

on:
  workflow_call:
    inputs:
      ingress:
        type: string
        default: internal-and-cloud-load-balancing
      execution-environment:
        type: string
        default: gen2
      cpu:
        type: number
        default: 1
      memory:
        type: string
        default: 512Mi
      max-instances:
        type: number
        default: 10
      concurrency:
        type: number
        default: 100
      timeout:
        type: number
        default: 150
      deploy-args:
        type: string

jobs:
  # quality:
  #   name: Quality Control
  #   uses: ./.github/workflows/nodejs_quality_control.yaml
  #   secrets: inherit

  # configuration:
  #   name: Environment Configuration
  #   runs-on: ubuntu-latest
  #   secrets: inherit
  #   needs: quality
  #   outputs:
  #     NODE_ENV: ${{ steps.config.outputs.NODE_ENV }}

  #   steps:
  #   - name: Configure Environment
  #     id: config
  #     run: |
  #       echo ::set-output name=NODE_ENV::${{ fromJSON('{"master":"production","stage":"staging"}')[github.ref_name] }}

  deploy:
    name: Cloud Run Deploy
    uses: ./.github/workflows/gpc_cloud_run_deploy.yaml
    secrets: inherit
    env:
      NPM_TOKEN: ${{ secrets.GLB_NPM_TOKEN }}
    # needs: configuration

    with:
      ingress: ${{ inputs.ingress }}
      execution-environment: ${{ inputs.execution-environment }}
      cpu: ${{ inputs.cpu }}
      max-instances: ${{ inputs.max-instances }}
      concurrency: ${{ inputs.concurrency }}
      timeout: ${{ inputs.timeout }}
      build-args: |
        --build-arg NPM_TOKEN=${{ env.NPM_TOKEN }}
      deploy-args: |
        --set-env-vars="NODE_ENV=${{ fromJSON('{"master":"production","stage":"staging"}')[github.ref_name] }}" \
        ${{ inputs.deploy-args }}
